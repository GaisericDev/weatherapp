var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.726,1,0.726]],["body/components/AppComponent.html",[0,1.154,1,1.228,2,1.947,3,0.776,4,0.616,5,1.845,6,1.845,7,1.845,8,1.845,9,0.616,10,1.845,11,1.845,12,2.922,13,2.325,14,1.947,15,2.446,16,3.594,17,2.446,18,3.204,19,0.616,20,1.276,21,3.982,22,0.616,23,0.082,24,0.963,25,0.963,26,0.963,27,2.446,28,0.963,29,2.417,30,0.963,31,0.776,32,0.776,33,0.351,34,1.845,35,2.446,36,2.446,37,1.845,38,2.922,39,1.845,40,1.028,41,1.845,42,0.776,43,0.776,44,1.845,45,1.845,46,0.044,47,0.058,48,0.044]],["title/modules/AppModule.html",[49,1.727,50,1.111]],["body/modules/AppModule.html",[1,1.409,3,0.768,4,0.609,9,0.609,23,0.083,30,1.625,31,0.768,32,0.768,33,0.347,42,1.31,46,0.043,47,0.058,48,0.043,50,2.103,51,1.453,52,1.563,53,1.826,54,1.826,55,1.826,56,2.429,57,1.826,58,1.453,59,2.391,60,3.181,61,3.181,62,3.181,63,3.181,64,1.826,65,1.453,66,3.181,67,1.826,68,2.391,69,2.391,70,3.181,71,1.826,72,2.391,73,2.391]],["title/injectables/ThemeService.html",[74,0.901,75,1.111]],["body/injectables/ThemeService.html",[3,0.542,4,0.43,9,0.43,14,1.027,19,0.43,20,0.993,22,0.888,23,0.083,24,1.389,28,1.543,30,0.673,31,0.542,32,0.542,33,0.245,40,0.951,46,0.031,47,0.045,48,0.031,74,0.993,75,1.224,76,1.027,77,1.29,78,3.151,79,2.962,80,2.962,81,1.515,82,3.27,83,3.27,84,2.496,85,2.492,86,2.962,87,0.83,88,2.492,89,3.27,90,2.492,91,1.8,92,1.8,93,1.689,94,1.689,95,2.119,96,2.496,97,1.689,98,1.689,99,1.027,100,2.492,101,1.689,102,4.022,103,2.492,104,3.649,105,3.487,106,1.689,107,2.962,108,1.689,109,1.29,110,1.689,111,1.689,112,1.689,113,1.689,114,1.689,115,2.492,116,3.487,117,1.29,118,1.689,119,1.29,120,1.689,121,1.689,122,1.689,123,2.492,124,1.689,125,1.515,126,1.027,127,1.29,128,1.29,129,1.689,130,1.29,131,2.492,132,1.689,133,2.492]],["title/classes/Weather.html",[33,0.329,43,0.726]],["body/classes/Weather.html",[3,0.622,4,0.494,9,0.494,19,0.494,20,1.097,22,1.069,23,0.08,24,1.602,25,0.772,26,0.772,28,1.688,32,0.622,33,0.281,40,1.028,43,0.884,46,0.035,47,0.05,48,0.035,87,1.573,99,1.673,119,1.48,134,1.48,135,4.551,136,2.444,137,2.811,138,3.202,139,3.202,140,2.444,141,3.202,142,2.444,143,3.202,144,3.202,145,3.202,146,1.938,147,1.938,148,1.938,149,1.938,150,3.167,151,1.938,152,2.102,153,1.938,154,1.938,155,1.938,156,1.938,157,1.938,158,1.938,159,1.938]],["title/injectables/WeatherApiService.html",[74,0.901,160,1.111]],["body/injectables/WeatherApiService.html",[3,0.708,4,0.562,9,0.562,14,1.341,19,0.562,20,1.2,22,0.939,23,0.083,24,1.538,25,1.2,26,1.2,28,1.469,30,1.469,31,0.708,32,0.708,33,0.32,40,0.967,43,0.708,46,0.04,47,0.055,48,0.04,67,1.685,74,1.2,76,1.341,81,1.831,87,1.084,91,1.831,92,1.831,95,1.341,109,1.685,125,1.341,160,1.48,161,2.947,162,1.685,163,3.432,164,3.432,165,2.301,166,2.206,167,3.688,168,3.013,169,3.013,170,2.301,171,2.206,172,2.301,173,3.432,174,3.013,175,3.013,176,2.206,177,2.206,178,1.685,179,2.206,180,2.206,181,2.206,182,2.206,183,2.206]],["title/components/WeatherComponent.html",[0,0.726,42,0.726]],["body/components/WeatherComponent.html",[0,0.66,1,0.309,2,0.973,3,0.309,4,0.245,5,0.735,6,0.735,7,0.735,8,0.735,9,0.245,11,0.735,12,1.828,13,1.455,15,1.222,17,1.222,19,0.245,20,0.638,22,0.868,23,0.083,24,1.553,25,0.638,26,0.638,28,1.425,30,0.954,31,0.309,32,0.309,33,0.14,34,0.735,35,1.222,36,1.222,37,0.735,38,1.828,39,0.735,40,0.921,41,0.735,42,0.769,43,1.171,44,0.735,45,0.735,46,0.017,47,0.029,48,0.017,75,1.494,78,1.222,81,0.973,84,1.569,87,0.787,91,1.455,92,1.455,95,1.616,96,1.828,99,0.973,125,0.973,126,0.585,127,1.569,128,2.03,130,0.735,136,2.03,137,2.191,140,1.828,142,0.735,150,1.569,160,1.41,165,1.222,170,1.222,172,2.731,184,0.735,185,1.222,186,2.055,187,2.055,188,1.601,189,2.659,190,1.601,191,2.395,192,1.601,193,2.395,194,0.963,195,1.601,196,1.601,197,0.963,198,0.963,199,0.963,200,0.963,201,1.601,202,0.963,203,0.963,204,0.963,205,0.963,206,0.963,207,0.963,208,0.963,209,0.963,210,0.963,211,0.963,212,0.963,213,0.963,214,2.659,215,1.601,216,2.395,217,2.055,218,0.963,219,0.963,220,0.963,221,0.963,222,0.963,223,1.601,224,1.249,225,0.963,226,0.963,227,0.963,228,0.963,229,0.963,230,0.963,231,0.963,232,0.963,233,0.963,234,0.963,235,0.963,236,0.963,237,0.963,238,0.963,239,0.963,240,0.963,241,0.963,242,0.963,243,0.963,244,0.963,245,0.963,246,1.601,247,0.963,248,0.963,249,1.601,250,0.963,251,0.963,252,1.601,253,0.963,254,1.601,255,0.963,256,0.963,257,1.601,258,0.963,259,1.601,260,1.601,261,0.963,262,1.601,263,0.963,264,0.963,265,0.963,266,0.963,267,0.963,268,0.963,269,0.963,270,0.963,271,0.963,272,0.963,273,0.963,274,0.963,275,0.963,276,0.963,277,0.963,278,0.963,279,0.963,280,0.963,281,0.963,282,0.963,283,0.963,284,0.963,285,0.963,286,0.963,287,0.963,288,0.963,289,0.963,290,0.963,291,0.963,292,0.963,293,0.963,294,0.963,295,0.963,296,0.963,297,0.963,298,0.963,299,0.963,300,0.963,301,0.963,302,0.963,303,0.963,304,0.963,305,0.963,306,0.963,307,0.963,308,0.963,309,2.395,310,0.735,311,0.735,312,0.963,313,1.601,314,1.601,315,1.601,316,1.601,317,1.601,318,1.601,319,1.601,320,1.601,321,1.601,322,1.601,323,1.601,324,1.601,325,1.601,326,0.963]],["title/coverage.html",[327,2.34]],["body/coverage.html",[0,1.095,1,0.854,9,0.678,10,2.031,22,0.678,23,0.081,33,0.386,42,0.854,43,0.854,46,0.048,47,0.062,48,0.048,74,1.359,75,1.307,77,2.031,134,2.031,160,1.307,161,2.031,162,2.031,184,2.031,224,1.617,310,3.336,327,2.031,328,2.661,329,2.661,330,2.661,331,2.661,332,3.411,333,2.661,334,2.661,335,2.031,336,3.971,337,2.604,338,3.971,339,2.031,340,2.604,341,2.031,342,2.031,343,2.661,344,2.661]],["title/dependencies.html",[52,1.334,345,1.451]],["body/dependencies.html",[23,0.082,31,0.954,46,0.054,47,0.066,48,0.054,52,1.46,64,2.792,65,2.222,71,2.269,178,2.269,346,2.973,347,3.341,348,2.973,349,2.973,350,2.973,351,2.973,352,2.973,353,2.973,354,2.973,355,2.973,356,2.973,357,2.973]],["title/index.html",[19,0.484,358,1.9,359,1.9]],["body/index.html",[0,1.13,4,0.591,13,1.409,23,0.057,27,1.77,40,0.744,46,0.042,47,0.057,48,0.042,58,1.409,117,1.77,185,1.77,224,1.409,345,1.77,347,1.77,360,3.116,361,2.318,362,3.52,363,3.52,364,2.318,365,2.318,366,3.116,367,3.927,368,4.132,369,2.318,370,2.318,371,2.318,372,2.318,373,2.318,374,2.318,375,2.318,376,2.318,377,2.318,378,2.318,379,3.52,380,3.52,381,2.318,382,3.764,383,2.318,384,2.318,385,2.318,386,2.318,387,3.116,388,3.116,389,3.764,390,2.318,391,3.116,392,3.116,393,2.318,394,4.044,395,2.318,396,2.318,397,2.318,398,3.116,399,2.318,400,2.318,401,2.318,402,2.318,403,2.318,404,3.52,405,2.318,406,2.318,407,2.318,408,1.409,409,2.318,410,2.318]],["title/modules.html",[51,1.862]],["body/modules.html",[23,0.072,46,0.062,47,0.072,48,0.062,50,1.687,51,2.087,65,2.087,411,3.435,412,3.435,413,3.435]],["title/overview.html",[408,1.862]],["body/overview.html",[1,1.404,2,1.798,23,0.077,33,0.43,42,1.269,46,0.054,47,0.066,48,0.054,49,2.26,50,2.148,52,1.792,53,2.26,54,2.26,55,2.26,56,2.784,57,2.26,58,1.798,76,1.798,311,2.784,408,1.798,414,3.647]],["title/miscellaneous/variables.html",[415,1.451,416,2.073]],["body/miscellaneous/variables.html",[19,0.723,22,1.035,23,0.082,25,1.545,26,1.545,46,0.052,47,0.065,48,0.052,126,2.159,152,2.166,335,2.166,337,3.104,339,2.166,340,2.166,341,2.712,342,2.712,415,2.166,416,2.166,417,3.553,418,2.837,419,2.837,420,2.837,421,2.837,422,2.837,423,3.553,424,3.553]]],"invertedIndex":[["",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/ThemeService.html":{},"classes/Weather.html":{},"injectables/WeatherApiService.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":310,"title":{},"body":{"components/WeatherComponent.html":{},"coverage.html":{}}}],["0.11.4",{"_index":357,"title":{},"body":{"dependencies.html":{}}}],["0.5",{"_index":274,"title":{},"body":{"components/WeatherComponent.html":{}}}],["0/1",{"_index":338,"title":{},"body":{"coverage.html":{}}}],["0/13",{"_index":332,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":331,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":334,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":333,"title":{},"body":{"coverage.html":{}}}],["0x0",{"_index":267,"title":{},"body":{"components/WeatherComponent.html":{}}}],["1",{"_index":311,"title":{},"body":{"components/WeatherComponent.html":{},"overview.html":{}}}],["12.2.0",{"_index":347,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["12.2.3",{"_index":349,"title":{},"body":{"dependencies.html":{}}}],["16",{"_index":293,"title":{},"body":{"components/WeatherComponent.html":{}}}],["2",{"_index":414,"title":{},"body":{"overview.html":{}}}],["2.3.0",{"_index":355,"title":{},"body":{"dependencies.html":{}}}],["22.5",{"_index":273,"title":{},"body":{"components/WeatherComponent.html":{}}}],["272.15).tofixed(2",{"_index":235,"title":{},"body":{"components/WeatherComponent.html":{}}}],["3.6).tofixed(0",{"_index":238,"title":{},"body":{"components/WeatherComponent.html":{}}}],["6.6.0",{"_index":353,"title":{},"body":{"dependencies.html":{}}}],["active",{"_index":129,"title":{},"body":{"injectables/ThemeService.html":{}}}],["actual_component",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherComponent.html":{}}}],["add",{"_index":117,"title":{},"body":{"injectables/ThemeService.html":{},"index.html":{}}}],["angular",{"_index":362,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":346,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":348,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":350,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"injectables/WeatherApiService.html":{}}}],["angular/compiler",{"_index":351,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/ThemeService.html":{},"injectables/WeatherApiService.html":{},"components/WeatherComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["api.service",{"_index":211,"title":{},"body":{"components/WeatherComponent.html":{}}}],["api.service.ts",{"_index":162,"title":{},"body":{"injectables/WeatherApiService.html":{},"coverage.html":{}}}],["api.service.ts:10",{"_index":176,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["api.service.ts:11",{"_index":168,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["api.service.ts:14",{"_index":171,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["app",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherComponent.html":{},"index.html":{}}}],["app.component",{"_index":68,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.sass",{"_index":16,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appid=9d1dce11fbf3e590dbb87df77dca4de6",{"_index":174,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["appmodule",{"_index":50,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["arr",{"_index":275,"title":{},"body":{"components/WeatherComponent.html":{}}}],["arr[(val",{"_index":292,"title":{},"body":{"components/WeatherComponent.html":{}}}],["artifacts",{"_index":383,"title":{},"body":{"index.html":{}}}],["automatically",{"_index":373,"title":{},"body":{"index.html":{}}}],["based",{"_index":182,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["body",{"_index":120,"title":{},"body":{"injectables/ThemeService.html":{}}}],["boolean",{"_index":99,"title":{},"body":{"injectables/ThemeService.html":{},"classes/Weather.html":{},"components/WeatherComponent.html":{}}}],["bootstrap",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["browse",{"_index":413,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":65,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodule",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":382,"title":{},"body":{"index.html":{}}}],["capabilities",{"_index":402,"title":{},"body":{"index.html":{}}}],["cardinal",{"_index":270,"title":{},"body":{"components/WeatherComponent.html":{}}}],["catcherror",{"_index":179,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["change",{"_index":375,"title":{},"body":{"index.html":{}}}],["check",{"_index":407,"title":{},"body":{"index.html":{}}}],["checking",{"_index":305,"title":{},"body":{"components/WeatherComponent.html":{}}}],["choice",{"_index":397,"title":{},"body":{"index.html":{}}}],["class",{"_index":33,"title":{"classes/Weather.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/ThemeService.html":{},"classes/Weather.html":{},"injectables/WeatherApiService.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":119,"title":{},"body":{"injectables/ThemeService.html":{},"classes/Weather.html":{}}}],["cli",{"_index":363,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":53,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":54,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":377,"title":{},"body":{"index.html":{}}}],["colortheme",{"_index":79,"title":{},"body":{"injectables/ThemeService.html":{}}}],["command",{"_index":398,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/WeatherComponent.html":{}},"body":{"components/AppComponent.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherComponent.html":{},"overview.html":{}}}],["const",{"_index":122,"title":{},"body":{"injectables/ThemeService.html":{}}}],["constructor",{"_index":87,"title":{},"body":{"injectables/ThemeService.html":{},"classes/Weather.html":{},"injectables/WeatherApiService.html":{},"components/WeatherComponent.html":{}}}],["constructor(http",{"_index":166,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["constructor(private",{"_index":181,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["constructor(rendererfactory",{"_index":88,"title":{},"body":{"injectables/ThemeService.html":{}}}],["constructor(weatherapiservice",{"_index":194,"title":{},"body":{"components/WeatherComponent.html":{}}}],["context",{"_index":341,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["country",{"_index":136,"title":{},"body":{"classes/Weather.html":{},"components/WeatherComponent.html":{}}}],["coverage",{"_index":327,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["dark",{"_index":127,"title":{},"body":{"injectables/ThemeService.html":{},"components/WeatherComponent.html":{}}}],["darkmode",{"_index":104,"title":{},"body":{"injectables/ThemeService.html":{}}}],["date",{"_index":137,"title":{},"body":{"classes/Weather.html":{},"components/WeatherComponent.html":{}}}],["day",{"_index":250,"title":{},"body":{"components/WeatherComponent.html":{}}}],["declarations",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["default",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"classes/Weather.html":{},"injectables/WeatherApiService.html":{},"components/WeatherComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"injectables/ThemeService.html":{},"classes/Weather.html":{},"injectables/WeatherApiService.html":{},"components/WeatherComponent.html":{}}}],["deg",{"_index":198,"title":{},"body":{"components/WeatherComponent.html":{}}}],["degrees",{"_index":252,"title":{},"body":{"components/WeatherComponent.html":{}}}],["degtodirections",{"_index":190,"title":{},"body":{"components/WeatherComponent.html":{}}}],["degtodirections(deg",{"_index":196,"title":{},"body":{"components/WeatherComponent.html":{}}}],["dependencies",{"_index":52,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desc",{"_index":138,"title":{},"body":{"classes/Weather.html":{}}}],["dev",{"_index":370,"title":{},"body":{"index.html":{}}}],["development",{"_index":365,"title":{},"body":{"index.html":{}}}],["direction",{"_index":139,"title":{},"body":{"classes/Weather.html":{}}}],["directions",{"_index":254,"title":{},"body":{"components/WeatherComponent.html":{}}}],["directiontxt",{"_index":189,"title":{},"body":{"components/WeatherComponent.html":{}}}],["directive",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherComponent.html":{}}}],["directives",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":381,"title":{},"body":{"index.html":{}}}],["directory",{"_index":386,"title":{},"body":{"index.html":{}}}],["displayed",{"_index":299,"title":{},"body":{"components/WeatherComponent.html":{}}}],["dist",{"_index":385,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":328,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherComponent.html":{}}}],["dynamic",{"_index":352,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":280,"title":{},"body":{"components/WeatherComponent.html":{}}}],["e2e",{"_index":395,"title":{},"body":{"index.html":{}}}],["element",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherComponent.html":{}}}],["end",{"_index":394,"title":{},"body":{"index.html":{}}}],["ene",{"_index":279,"title":{},"body":{"components/WeatherComponent.html":{}}}],["environment",{"_index":337,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["error",{"_index":140,"title":{},"body":{"classes/Weather.html":{},"components/WeatherComponent.html":{}}}],["ese",{"_index":281,"title":{},"body":{"components/WeatherComponent.html":{}}}],["execute",{"_index":391,"title":{},"body":{"index.html":{}}}],["export",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/ThemeService.html":{},"classes/Weather.html":{},"injectables/WeatherApiService.html":{},"components/WeatherComponent.html":{}}}],["false",{"_index":152,"title":{},"body":{"classes/Weather.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/ThemeService.html":{},"classes/Weather.html":{},"injectables/WeatherApiService.html":{},"components/WeatherComponent.html":{},"coverage.html":{}}}],["files",{"_index":376,"title":{},"body":{"index.html":{}}}],["first",{"_index":400,"title":{},"body":{"index.html":{}}}],["format",{"_index":241,"title":{},"body":{"components/WeatherComponent.html":{}}}],["formsmodule",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["further",{"_index":403,"title":{},"body":{"index.html":{}}}],["generate",{"_index":379,"title":{},"body":{"index.html":{}}}],["generated",{"_index":361,"title":{},"body":{"index.html":{}}}],["getcolortheme",{"_index":82,"title":{},"body":{"injectables/ThemeService.html":{}}}],["gets",{"_index":219,"title":{},"body":{"components/WeatherComponent.html":{}}}],["getting",{"_index":358,"title":{"index.html":{}},"body":{}}],["getweather",{"_index":165,"title":{},"body":{"injectables/WeatherApiService.html":{},"components/WeatherComponent.html":{}}}],["getweather(location",{"_index":170,"title":{},"body":{"injectables/WeatherApiService.html":{},"components/WeatherComponent.html":{}}}],["given",{"_index":220,"title":{},"body":{"components/WeatherComponent.html":{}}}],["go",{"_index":406,"title":{},"body":{"index.html":{}}}],["handling",{"_index":264,"title":{},"body":{"components/WeatherComponent.html":{}}}],["help",{"_index":404,"title":{},"body":{"index.html":{}}}],["html",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherComponent.html":{}}}],["http",{"_index":169,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["http://api.openweathermap.org/data/2.5/weather?q",{"_index":175,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["http://localhost:4200",{"_index":372,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":167,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["httpclientmodule",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["httpresponse",{"_index":177,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["humidity",{"_index":141,"title":{},"body":{"classes/Weather.html":{}}}],["icon",{"_index":142,"title":{},"body":{"classes/Weather.html":{},"components/WeatherComponent.html":{}}}],["identifier",{"_index":329,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":265,"title":{},"body":{"components/WeatherComponent.html":{}}}],["implements",{"_index":185,"title":{},"body":{"components/WeatherComponent.html":{},"index.html":{}}}],["import",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/ThemeService.html":{},"injectables/WeatherApiService.html":{},"components/WeatherComponent.html":{}}}],["imports",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["index",{"_index":19,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/ThemeService.html":{},"classes/Weather.html":{},"injectables/WeatherApiService.html":{},"components/WeatherComponent.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/ThemeService.html":{},"classes/Weather.html":{},"injectables/WeatherApiService.html":{},"components/WeatherComponent.html":{}}}],["initialize",{"_index":113,"title":{},"body":{"injectables/ThemeService.html":{}}}],["inittheme",{"_index":83,"title":{},"body":{"injectables/ThemeService.html":{}}}],["injectable",{"_index":74,"title":{"injectables/ThemeService.html":{},"injectables/WeatherApiService.html":{}},"body":{"injectables/ThemeService.html":{},"injectables/WeatherApiService.html":{},"coverage.html":{}}}],["injectables",{"_index":76,"title":{},"body":{"injectables/ThemeService.html":{},"injectables/WeatherApiService.html":{},"overview.html":{}}}],["input",{"_index":306,"title":{},"body":{"components/WeatherComponent.html":{}}}],["isdarkmode",{"_index":84,"title":{},"body":{"injectables/ThemeService.html":{},"components/WeatherComponent.html":{}}}],["karma",{"_index":393,"title":{},"body":{"index.html":{}}}],["key",{"_index":163,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["km/h",{"_index":323,"title":{},"body":{"components/WeatherComponent.html":{}}}],["left",{"_index":302,"title":{},"body":{"components/WeatherComponent.html":{}}}],["legend",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherComponent.html":{}}}],["light",{"_index":217,"title":{},"body":{"components/WeatherComponent.html":{}}}],["lightmode",{"_index":105,"title":{},"body":{"injectables/ThemeService.html":{}}}],["literal",{"_index":422,"title":{},"body":{"miscellaneous/variables.html":{}}}],["localstorage",{"_index":131,"title":{},"body":{"injectables/ThemeService.html":{}}}],["localstorage.getitem('usertheme",{"_index":133,"title":{},"body":{"injectables/ThemeService.html":{}}}],["localstorage.setitem('usertheme",{"_index":132,"title":{},"body":{"injectables/ThemeService.html":{}}}],["location",{"_index":172,"title":{},"body":{"injectables/WeatherApiService.html":{},"components/WeatherComponent.html":{}}}],["location.split",{"_index":308,"title":{},"body":{"components/WeatherComponent.html":{}}}],["location}}{{date",{"_index":326,"title":{},"body":{"components/WeatherComponent.html":{}}}],["long",{"_index":246,"title":{},"body":{"components/WeatherComponent.html":{}}}],["matching",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/ThemeService.html":{},"classes/Weather.html":{},"injectables/WeatherApiService.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["math.floor((deg",{"_index":272,"title":{},"body":{"components/WeatherComponent.html":{}}}],["message",{"_index":266,"title":{},"body":{"components/WeatherComponent.html":{}}}],["metadata",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherComponent.html":{}}}],["methods",{"_index":81,"title":{},"body":{"injectables/ThemeService.html":{},"injectables/WeatherApiService.html":{},"components/WeatherComponent.html":{}}}],["miscellaneous",{"_index":415,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["misspelled",{"_index":319,"title":{},"body":{"components/WeatherComponent.html":{}}}],["mode",{"_index":128,"title":{},"body":{"injectables/ThemeService.html":{},"components/WeatherComponent.html":{}}}],["models/weather.model",{"_index":209,"title":{},"body":{"components/WeatherComponent.html":{}}}],["module",{"_index":49,"title":{"modules/AppModule.html":{}},"body":{"overview.html":{}}}],["modules",{"_index":51,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{}}}],["month",{"_index":247,"title":{},"body":{"components/WeatherComponent.html":{}}}],["more",{"_index":405,"title":{},"body":{"index.html":{}}}],["n",{"_index":276,"title":{},"body":{"components/WeatherComponent.html":{}}}],["name",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"injectables/ThemeService.html":{},"classes/Weather.html":{},"injectables/WeatherApiService.html":{},"components/WeatherComponent.html":{},"index.html":{}}}],["navigate",{"_index":371,"title":{},"body":{"index.html":{}}}],["ne",{"_index":278,"title":{},"body":{"components/WeatherComponent.html":{}}}],["need",{"_index":399,"title":{},"body":{"index.html":{}}}],["new",{"_index":224,"title":{},"body":{"components/WeatherComponent.html":{},"coverage.html":{},"index.html":{}}}],["newlocation",{"_index":307,"title":{},"body":{"components/WeatherComponent.html":{}}}],["newlocation.join",{"_index":312,"title":{},"body":{"components/WeatherComponent.html":{}}}],["ng",{"_index":368,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["ngoninit",{"_index":191,"title":{},"body":{"components/WeatherComponent.html":{}}}],["nne",{"_index":277,"title":{},"body":{"components/WeatherComponent.html":{}}}],["nnw",{"_index":291,"title":{},"body":{"components/WeatherComponent.html":{}}}],["null",{"_index":112,"title":{},"body":{"injectables/ThemeService.html":{}}}],["number",{"_index":150,"title":{},"body":{"classes/Weather.html":{},"components/WeatherComponent.html":{}}}],["numeric",{"_index":249,"title":{},"body":{"components/WeatherComponent.html":{}}}],["nw",{"_index":290,"title":{},"body":{"components/WeatherComponent.html":{}}}],["object",{"_index":423,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":173,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["oninit",{"_index":186,"title":{},"body":{"components/WeatherComponent.html":{}}}],["oops",{"_index":314,"title":{},"body":{"components/WeatherComponent.html":{}}}],["optional",{"_index":92,"title":{},"body":{"injectables/ThemeService.html":{},"injectables/WeatherApiService.html":{},"components/WeatherComponent.html":{}}}],["out",{"_index":58,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":408,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["package",{"_index":345,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["page",{"_index":410,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":91,"title":{},"body":{"injectables/ThemeService.html":{},"injectables/WeatherApiService.html":{},"components/WeatherComponent.html":{}}}],["parseint((res.main.temp",{"_index":234,"title":{},"body":{"components/WeatherComponent.html":{}}}],["parseint((res.wind.speed",{"_index":237,"title":{},"body":{"components/WeatherComponent.html":{}}}],["parseint(res.main.humidity.tofixed(0",{"_index":230,"title":{},"body":{"components/WeatherComponent.html":{}}}],["parseint(res.main.pressure",{"_index":232,"title":{},"body":{"components/WeatherComponent.html":{}}}],["parseint(res.wind.deg",{"_index":240,"title":{},"body":{"components/WeatherComponent.html":{}}}],["perhaps",{"_index":318,"title":{},"body":{"components/WeatherComponent.html":{}}}],["platform",{"_index":396,"title":{},"body":{"index.html":{}}}],["pressure",{"_index":143,"title":{},"body":{"classes/Weather.html":{}}}],["previouscolortheme",{"_index":123,"title":{},"body":{"injectables/ThemeService.html":{}}}],["private",{"_index":78,"title":{},"body":{"injectables/ThemeService.html":{},"components/WeatherComponent.html":{}}}],["process",{"_index":259,"title":{},"body":{"components/WeatherComponent.html":{}}}],["processedlocation",{"_index":309,"title":{},"body":{"components/WeatherComponent.html":{}}}],["processlocation",{"_index":192,"title":{},"body":{"components/WeatherComponent.html":{}}}],["processlocation(location",{"_index":201,"title":{},"body":{"components/WeatherComponent.html":{}}}],["production",{"_index":424,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":360,"title":{},"body":{"index.html":{}}}],["properties",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"injectables/ThemeService.html":{},"classes/Weather.html":{},"injectables/WeatherApiService.html":{},"components/WeatherComponent.html":{}}}],["providedin",{"_index":109,"title":{},"body":{"injectables/ThemeService.html":{},"injectables/WeatherApiService.html":{}}}],["providers",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["public",{"_index":135,"title":{},"body":{"classes/Weather.html":{}}}],["reference",{"_index":409,"title":{},"body":{"index.html":{}}}],["reload",{"_index":374,"title":{},"body":{"index.html":{}}}],["remove",{"_index":118,"title":{},"body":{"injectables/ThemeService.html":{}}}],["removing",{"_index":300,"title":{},"body":{"components/WeatherComponent.html":{}}}],["renderer",{"_index":80,"title":{},"body":{"injectables/ThemeService.html":{}}}],["renderer2",{"_index":107,"title":{},"body":{"injectables/ThemeService.html":{}}}],["rendererfactory",{"_index":93,"title":{},"body":{"injectables/ThemeService.html":{}}}],["rendererfactory.createrenderer(null",{"_index":111,"title":{},"body":{"injectables/ThemeService.html":{}}}],["rendererfactory2",{"_index":89,"title":{},"body":{"injectables/ThemeService.html":{}}}],["require",{"_index":342,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":420,"title":{},"body":{"miscellaneous/variables.html":{}}}],["res",{"_index":222,"title":{},"body":{"components/WeatherComponent.html":{}}}],["res.name",{"_index":228,"title":{},"body":{"components/WeatherComponent.html":{}}}],["res.sys.country",{"_index":261,"title":{},"body":{"components/WeatherComponent.html":{}}}],["res.weather[0].description",{"_index":226,"title":{},"body":{"components/WeatherComponent.html":{}}}],["res.weather[0].icon",{"_index":258,"title":{},"body":{"components/WeatherComponent.html":{}}}],["reset",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["result",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/ThemeService.html":{},"classes/Weather.html":{},"injectables/WeatherApiService.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/ThemeService.html":{},"classes/Weather.html":{},"injectables/WeatherApiService.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":125,"title":{},"body":{"injectables/ThemeService.html":{},"injectables/WeatherApiService.html":{},"components/WeatherComponent.html":{}}}],["returns",{"_index":95,"title":{},"body":{"injectables/ThemeService.html":{},"injectables/WeatherApiService.html":{},"components/WeatherComponent.html":{}}}],["right",{"_index":303,"title":{},"body":{"components/WeatherComponent.html":{}}}],["root",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"injectables/ThemeService.html":{},"injectables/WeatherApiService.html":{}}}],["root'},{'name",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherComponent.html":{}}}],["run",{"_index":367,"title":{},"body":{"index.html":{}}}],["running",{"_index":387,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":178,"title":{},"body":{"injectables/WeatherApiService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":180,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["s",{"_index":284,"title":{},"body":{"components/WeatherComponent.html":{}}}],["scaffolding",{"_index":378,"title":{},"body":{"index.html":{}}}],["se",{"_index":282,"title":{},"body":{"components/WeatherComponent.html":{}}}],["selector",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherComponent.html":{}}}],["serve",{"_index":369,"title":{},"body":{"index.html":{}}}],["server",{"_index":366,"title":{},"body":{"index.html":{}}}],["service",{"_index":296,"title":{},"body":{"components/WeatherComponent.html":{}}}],["services/theme.service",{"_index":212,"title":{},"body":{"components/WeatherComponent.html":{}}}],["services/weather",{"_index":210,"title":{},"body":{"components/WeatherComponent.html":{}}}],["set",{"_index":130,"title":{},"body":{"injectables/ThemeService.html":{},"components/WeatherComponent.html":{}}}],["setcolortheme",{"_index":85,"title":{},"body":{"injectables/ThemeService.html":{}}}],["setcolortheme(theme",{"_index":100,"title":{},"body":{"injectables/ThemeService.html":{}}}],["side",{"_index":304,"title":{},"body":{"components/WeatherComponent.html":{}}}],["something",{"_index":315,"title":{},"body":{"components/WeatherComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/ThemeService.html":{},"classes/Weather.html":{},"injectables/WeatherApiService.html":{},"components/WeatherComponent.html":{},"index.html":{}}}],["spaces",{"_index":301,"title":{},"body":{"components/WeatherComponent.html":{}}}],["spec\\.ts",{"_index":421,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":418,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":419,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":417,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:9",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":59,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/models/weather.model.ts",{"_index":134,"title":{},"body":{"classes/Weather.html":{},"coverage.html":{}}}],["src/app/models/weather.model.ts:1",{"_index":146,"title":{},"body":{"classes/Weather.html":{}}}],["src/app/models/weather.model.ts:10",{"_index":151,"title":{},"body":{"classes/Weather.html":{}}}],["src/app/models/weather.model.ts:11",{"_index":148,"title":{},"body":{"classes/Weather.html":{}}}],["src/app/models/weather.model.ts:12",{"_index":155,"title":{},"body":{"classes/Weather.html":{}}}],["src/app/models/weather.model.ts:13",{"_index":147,"title":{},"body":{"classes/Weather.html":{}}}],["src/app/models/weather.model.ts:14",{"_index":153,"title":{},"body":{"classes/Weather.html":{}}}],["src/app/models/weather.model.ts:4",{"_index":156,"title":{},"body":{"classes/Weather.html":{}}}],["src/app/models/weather.model.ts:5",{"_index":149,"title":{},"body":{"classes/Weather.html":{}}}],["src/app/models/weather.model.ts:6",{"_index":159,"title":{},"body":{"classes/Weather.html":{}}}],["src/app/models/weather.model.ts:7",{"_index":158,"title":{},"body":{"classes/Weather.html":{}}}],["src/app/models/weather.model.ts:8",{"_index":154,"title":{},"body":{"classes/Weather.html":{}}}],["src/app/models/weather.model.ts:9",{"_index":157,"title":{},"body":{"classes/Weather.html":{}}}],["src/app/services/theme.service.ts",{"_index":77,"title":{},"body":{"injectables/ThemeService.html":{},"coverage.html":{}}}],["src/app/services/theme.service.ts:16",{"_index":97,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/services/theme.service.ts:23",{"_index":106,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/services/theme.service.ts:30",{"_index":98,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/services/theme.service.ts:34",{"_index":101,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/services/theme.service.ts:39",{"_index":94,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/services/theme.service.ts:7",{"_index":108,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/services/theme.service.ts:8",{"_index":90,"title":{},"body":{"injectables/ThemeService.html":{}}}],["src/app/services/weather",{"_index":161,"title":{},"body":{"injectables/WeatherApiService.html":{},"coverage.html":{}}}],["src/app/weather/weather.component.ts",{"_index":184,"title":{},"body":{"components/WeatherComponent.html":{},"coverage.html":{}}}],["src/app/weather/weather.component.ts:12",{"_index":208,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/weather/weather.component.ts:13",{"_index":206,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/weather/weather.component.ts:14",{"_index":204,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/weather/weather.component.ts:15",{"_index":205,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/weather/weather.component.ts:16",{"_index":207,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/weather/weather.component.ts:17",{"_index":195,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/weather/weather.component.ts:28",{"_index":200,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/weather/weather.component.ts:33",{"_index":199,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/weather/weather.component.ts:72",{"_index":197,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/weather/weather.component.ts:78",{"_index":203,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/app/weather/weather.component.ts:84",{"_index":202,"title":{},"body":{"components/WeatherComponent.html":{}}}],["src/environments/environment.prod.ts",{"_index":335,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":339,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":340,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["sse",{"_index":283,"title":{},"body":{"components/WeatherComponent.html":{}}}],["ssw",{"_index":285,"title":{},"body":{"components/WeatherComponent.html":{}}}],["started",{"_index":359,"title":{"index.html":{}},"body":{}}],["statements",{"_index":330,"title":{},"body":{"coverage.html":{}}}],["stored",{"_index":384,"title":{},"body":{"index.html":{}}}],["string",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"injectables/ThemeService.html":{},"classes/Weather.html":{},"injectables/WeatherApiService.html":{},"components/WeatherComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherComponent.html":{}}}],["styleurls",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherComponent.html":{}}}],["support",{"_index":411,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":412,"title":{},"body":{"modules.html":{}}}],["sw",{"_index":286,"title":{},"body":{"components/WeatherComponent.html":{}}}],["table",{"_index":344,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":343,"title":{},"body":{"coverage.html":{}}}],["temp",{"_index":144,"title":{},"body":{"classes/Weather.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherComponent.html":{}}}],["templateurl",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherComponent.html":{}}}],["test",{"_index":390,"title":{},"body":{"index.html":{}}}],["testing",{"_index":401,"title":{},"body":{"index.html":{}}}],["tests",{"_index":389,"title":{},"body":{"index.html":{}}}],["theme",{"_index":102,"title":{},"body":{"injectables/ThemeService.html":{}}}],["themeservice",{"_index":75,"title":{"injectables/ThemeService.html":{}},"body":{"injectables/ThemeService.html":{},"components/WeatherComponent.html":{},"coverage.html":{}}}],["this.colortheme",{"_index":116,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.date",{"_index":243,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.degtodirections(this.weather.direction",{"_index":256,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.directiontxt",{"_index":255,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.getcolortheme",{"_index":114,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.getweather('amsterdam",{"_index":218,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.http.get(`${this.url}${location}${this.key",{"_index":183,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["this.isdarkmode",{"_index":214,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.location",{"_index":262,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.mode",{"_index":216,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.processlocation(this.weather.name",{"_index":263,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.renderer",{"_index":110,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.renderer.addclass(document.body",{"_index":115,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.renderer.removeclass(document.body",{"_index":124,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.setcolortheme(theme",{"_index":121,"title":{},"body":{"injectables/ThemeService.html":{}}}],["this.themeservice.inittheme",{"_index":213,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.themeservice.isdarkmode",{"_index":215,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.themeservice.update('darkmode",{"_index":298,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.themeservice.update('lightmode",{"_index":297,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.weather",{"_index":223,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.weather.country",{"_index":260,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.weather.date",{"_index":242,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.weather.date.tolocalestring('en",{"_index":244,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.weather.desc",{"_index":225,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.weather.direction",{"_index":239,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.weather.error",{"_index":268,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.weather.humidity",{"_index":229,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.weather.icon",{"_index":257,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.weather.name",{"_index":227,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.weather.pressure",{"_index":231,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.weather.temp",{"_index":233,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.weather.windspeed",{"_index":236,"title":{},"body":{"components/WeatherComponent.html":{}}}],["this.weatherapiservice.getweather(location).subscribe",{"_index":221,"title":{},"body":{"components/WeatherComponent.html":{}}}],["title",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["titlecase",{"_index":321,"title":{},"body":{"components/WeatherComponent.html":{}}}],["toggledarkmode",{"_index":193,"title":{},"body":{"components/WeatherComponent.html":{}}}],["toggles",{"_index":294,"title":{},"body":{"components/WeatherComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherComponent.html":{}}}],["true",{"_index":126,"title":{},"body":{"injectables/ThemeService.html":{},"components/WeatherComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":354,"title":{},"body":{"dependencies.html":{}}}],["turn",{"_index":251,"title":{},"body":{"components/WeatherComponent.html":{}}}],["turns",{"_index":269,"title":{},"body":{"components/WeatherComponent.html":{}}}],["type",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"injectables/ThemeService.html":{},"classes/Weather.html":{},"injectables/WeatherApiService.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":388,"title":{},"body":{"index.html":{}}}],["update",{"_index":86,"title":{},"body":{"injectables/ThemeService.html":{}}}],["update(theme",{"_index":103,"title":{},"body":{"injectables/ThemeService.html":{}}}],["url",{"_index":164,"title":{},"body":{"injectables/WeatherApiService.html":{}}}],["use",{"_index":380,"title":{},"body":{"index.html":{}}}],["using",{"_index":295,"title":{},"body":{"components/WeatherComponent.html":{}}}],["val",{"_index":271,"title":{},"body":{"components/WeatherComponent.html":{}}}],["value",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"classes/Weather.html":{},"injectables/WeatherApiService.html":{},"components/WeatherComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"components/WeatherComponent.html":{}}}],["variable",{"_index":336,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":416,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":364,"title":{},"body":{"index.html":{}}}],["via",{"_index":392,"title":{},"body":{"index.html":{}}}],["void",{"_index":96,"title":{},"body":{"injectables/ThemeService.html":{},"components/WeatherComponent.html":{}}}],["w",{"_index":288,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weather",{"_index":43,"title":{"classes/Weather.html":{}},"body":{"components/AppComponent.html":{},"classes/Weather.html":{},"injectables/WeatherApiService.html":{},"components/WeatherComponent.html":{},"coverage.html":{}}}],["weather.component.html",{"_index":188,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weather.component.sass",{"_index":187,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weather.desc",{"_index":320,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weather.humidity",{"_index":324,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weather.pressure}}hpa",{"_index":325,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weather.temp}}°c",{"_index":313,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weather.windspeed",{"_index":322,"title":{},"body":{"components/WeatherComponent.html":{}}}],["weather/weather.component",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["weatherapiservice",{"_index":160,"title":{"injectables/WeatherApiService.html":{}},"body":{"injectables/WeatherApiService.html":{},"components/WeatherComponent.html":{},"coverage.html":{}}}],["weatherapp",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"index.html":{}}}],["weathercomponent",{"_index":42,"title":{"components/WeatherComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/WeatherComponent.html":{},"coverage.html":{},"overview.html":{}}}],["weekday",{"_index":245,"title":{},"body":{"components/WeatherComponent.html":{}}}],["went",{"_index":316,"title":{},"body":{"components/WeatherComponent.html":{}}}],["wind",{"_index":253,"title":{},"body":{"components/WeatherComponent.html":{}}}],["windspeed",{"_index":145,"title":{},"body":{"classes/Weather.html":{}}}],["wnw",{"_index":289,"title":{},"body":{"components/WeatherComponent.html":{}}}],["wrong",{"_index":317,"title":{},"body":{"components/WeatherComponent.html":{}}}],["wsw",{"_index":287,"title":{},"body":{"components/WeatherComponent.html":{}}}],["year",{"_index":248,"title":{},"body":{"components/WeatherComponent.html":{}}}],["zone.js",{"_index":356,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'weatherapp'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.sass']\n})\nexport class AppComponent {\n  title = 'weatherapp';\n}\n\n    \n\n    \n        \n\n\n\n  \n  \n  \n  {{title}}\n\n\n\n  \n\n\n\n    \n\n    \n                \n                    ./app.component.sass\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        {{title}}  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nWeatherComponent\n\nWeatherComponent\n\nAppModule -->\n\nWeatherComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            WeatherComponent\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { WeatherComponent } from './weather/weather.component';\nimport { FormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WeatherComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ThemeService.html":{"url":"injectables/ThemeService.html","title":"injectable - ThemeService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ThemeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/theme.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                colorTheme\n                            \n                            \n                                    Private\n                                renderer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getColorTheme\n                            \n                            \n                                initTheme\n                            \n                            \n                                isDarkMode\n                            \n                            \n                                    Private\n                                setColorTheme\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(rendererFactory: RendererFactory2)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/theme.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        rendererFactory\n                                                  \n                                                        \n                                                                        RendererFactory2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getColorTheme\n                        \n                    \n                \n            \n            \n                \n                    \n                    getColorTheme()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/theme.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        initTheme\n                        \n                    \n                \n            \n            \n                \ninitTheme()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/theme.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDarkMode\n                        \n                    \n                \n            \n            \n                \nisDarkMode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/theme.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        setColorTheme\n                        \n                    \n                \n            \n            \n                \n                    \n                    setColorTheme(theme: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/theme.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    theme\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(theme: \"darkMode\" | \"lightMode\")\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/theme.service.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    theme\n                                    \n                                            \"darkMode\" | \"lightMode\"\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        colorTheme\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/theme.service.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        renderer\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Renderer2\n\n                    \n                \n                    \n                        \n                                Defined in src/app/services/theme.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Renderer2, RendererFactory2 } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThemeService {\n  private renderer: Renderer2;\n  private colorTheme: string;\n\n  constructor(rendererFactory: RendererFactory2) {\n    this.renderer = rendererFactory.createRenderer(null, null);\n  }\n\n\n  //initialize the theme\n  initTheme() {\n\n    this.getColorTheme();\n    this.renderer.addClass(document.body, this.colorTheme);\n  }\n\n  //update theme - add and remove classes from body\n  update(theme: 'darkMode' | 'lightMode') {\n    this.setColorTheme(theme);\n    const previousColorTheme = (theme === 'darkMode' ? 'lightMode' : 'darkMode');\n    this.renderer.removeClass(document.body, previousColorTheme);\n    this.renderer.addClass(document.body, theme);\n  }\n  //return true if dark mode is active\n  isDarkMode() {\n    return this.colorTheme === 'darkMode';\n  }\n  //set theme in localstorage\n  private setColorTheme(theme: string) {\n    this.colorTheme = theme;\n    localStorage.setItem('userTheme', theme);\n  }\n  //get theme from localstorage\n  private getColorTheme() {\n    if (localStorage.getItem('userTheme')) {\n      this.colorTheme = localStorage.getItem('userTheme');\n    }\n    else {\n      this.colorTheme = 'lightMode';\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Weather.html":{"url":"classes/Weather.html","title":"class - Weather","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Weather\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/weather.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                country\n                            \n                            \n                                    Public\n                                date\n                            \n                            \n                                    Public\n                                desc\n                            \n                            \n                                    Public\n                                direction\n                            \n                            \n                                    Public\n                                error\n                            \n                            \n                                    Public\n                                humidity\n                            \n                            \n                                    Public\n                                icon\n                            \n                            \n                                    Public\n                                name\n                            \n                            \n                                    Public\n                                pressure\n                            \n                            \n                                    Public\n                                temp\n                            \n                            \n                                    Public\n                                windSpeed\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/models/weather.model.ts:1\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        country\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/weather.model.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/weather.model.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        desc\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/weather.model.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        direction\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/weather.model.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/models/weather.model.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        humidity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/weather.model.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        icon\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/weather.model.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/weather.model.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        pressure\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/weather.model.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        temp\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/weather.model.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        windSpeed\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/weather.model.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Weather {\n    constructor\n        () { }\n    public name: string;\n    public desc: string;\n    public windSpeed: number;\n    public temp: number;\n    public humidity: number;\n    public pressure: number;\n    public direction: number;\n    public date: Date;\n    public icon: string;\n    public country: string;\n    public error: boolean = false;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/WeatherApiService.html":{"url":"injectables/WeatherApiService.html","title":"injectable - WeatherApiService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  WeatherApiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/weather-api.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                key\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getWeather\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/weather-api.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getWeather\n                        \n                    \n                \n            \n            \n                \ngetWeather(location: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/weather-api.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    location\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '&appid=9d1dce11fbf3e590dbb87df77dca4de6'\n                    \n                \n                    \n                        \n                                Defined in src/app/services/weather-api.service.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        url\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'http://api.openweathermap.org/data/2.5/weather?q='\n                    \n                \n                    \n                        \n                                Defined in src/app/services/weather-api.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WeatherApiService {\n  url = 'http://api.openweathermap.org/data/2.5/weather?q=';\n  key = '&appid=9d1dce11fbf3e590dbb87df77dca4de6';\n  constructor(private http: HttpClient) { }\n  //get weather based on location\n  getWeather(location: string): Observable {\n    return this.http.get(`${this.url}${location}${this.key}`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WeatherComponent.html":{"url":"components/WeatherComponent.html","title":"component - WeatherComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  WeatherComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/weather/weather.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-weather\n            \n\n            \n                styleUrls\n                ./weather.component.sass\n            \n\n\n\n            \n                templateUrl\n                ./weather.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                date\n                            \n                            \n                                directionTxt\n                            \n                            \n                                isDarkMode\n                            \n                            \n                                location\n                            \n                            \n                                mode\n                            \n                            \n                                weather\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                degToDirections\n                            \n                            \n                                getWeather\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                processLocation\n                            \n                            \n                                toggleDarkMode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(weatherApiService: WeatherApiService, themeService: ThemeService)\n                    \n                \n                        \n                            \n                                Defined in src/app/weather/weather.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        weatherApiService\n                                                  \n                                                        \n                                                                        WeatherApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        themeService\n                                                  \n                                                        \n                                                                        ThemeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        degToDirections\n                        \n                    \n                \n            \n            \n                \ndegToDirections(deg: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/weather/weather.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    deg\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getWeather\n                        \n                    \n                \n            \n            \n                \ngetWeather(location: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/weather/weather.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    location\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/weather/weather.component.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        processLocation\n                        \n                    \n                \n            \n            \n                \nprocessLocation(location: string, country: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/weather/weather.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    location\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    country\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleDarkMode\n                        \n                    \n                \n            \n            \n                \ntoggleDarkMode()\n                \n            \n\n\n            \n                \n                    Defined in src/app/weather/weather.component.ts:78\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        date\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/weather/weather.component.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        directionTxt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/weather/weather.component.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isDarkMode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/weather/weather.component.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        location\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/weather/weather.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/weather/weather.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        weather\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Weather\n\n                    \n                \n                    \n                        \n                                Defined in src/app/weather/weather.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Weather } from '../models/weather.model';\nimport { WeatherApiService } from '../services/weather-api.service';\nimport { ThemeService } from '../services/theme.service';\n\n@Component({\n  selector: 'app-weather',\n  templateUrl: './weather.component.html',\n  styleUrls: ['./weather.component.sass']\n})\nexport class WeatherComponent implements OnInit {\n  weather: Weather;\n  location: string = '';\n  date: string;\n  isDarkMode: boolean;\n  mode: string;\n  directionTxt: string = '';\n\n  constructor(\n    private weatherApiService: WeatherApiService,\n    private themeService: ThemeService\n  ) {\n    this.themeService.initTheme();\n    this.isDarkMode = this.themeService.isDarkMode();\n    this.isDarkMode ? this.mode = 'dark' : this.mode = 'light';\n  }\n\n  ngOnInit(): void {\n    this.getWeather('Amsterdam');\n  }\n\n  //gets the weather for given location\n  getWeather(location: string) {\n    this.weatherApiService.getWeather(location).subscribe(\n      res => {\n        this.weather = new Weather();\n        this.weather.desc = res.weather[0].description;\n        this.weather.name = res.name;\n        this.weather.humidity = parseInt(res.main.humidity.toFixed(0));\n        this.weather.pressure = parseInt(res.main.pressure);\n        this.weather.temp = parseInt((res.main.temp - 272.15).toFixed(2));\n        this.weather.windSpeed = parseInt((res.wind.speed * 3.6).toFixed(0));\n        this.weather.direction = parseInt(res.wind.deg);\n        //format date\n        this.weather.date = new Date();\n        this.date = (this.weather.date.toLocaleString('en-us', {\n          weekday: 'long',\n          month: 'long',\n          year: 'numeric',\n          day: 'numeric',\n        }));\n        //turn degrees into wind directions\n        this.directionTxt = this.degToDirections(this.weather.direction);\n        //get weather icon\n        this.weather.icon = res.weather[0].icon;\n        //process location\n        this.weather.country = res.sys.country;\n        this.location = this.processLocation(this.weather.name, this.weather.country);\n      },\n      //error handling, set error image and message\n      error => {\n        this.weather = new Weather();\n        this.weather.icon = '0x0';\n        this.weather.error = true;\n        this.location = 'Error';\n      }\n\n    )\n  }\n\n  //turns degrees to cardinal directions\n  degToDirections(deg: number) {\n    let val = Math.floor((deg / 22.5) + 0.5);\n    let arr = [\"N\", \"NNE\", \"NE\", \"ENE\", \"E\", \"ESE\", \"SE\", \"SSE\", \"S\", \"SSW\", \"SW\", \"WSW\", \"W\", \"WNW\", \"NW\", \"NNW\"];\n    return arr[(val % 16)];\n  }\n  //toggles dark mode / light mode using service\n  toggleDarkMode() {\n    this.isDarkMode = this.themeService.isDarkMode();\n    this.isDarkMode ? this.themeService.update('lightMode') : this.themeService.update('darkMode');\n    this.isDarkMode ? this.mode = 'light' : this.mode = 'dark';\n  }\n  //process location displayed by removing spaces from left and right side and checking if country was input\n  processLocation(location: string, country: string) {\n    let newLocation = location.split(',');\n    let processedLocation = '';\n    for (let i = 0; i  1) {\n      processedLocation = newLocation.join(', ');\n    }\n    else {\n      processedLocation = `${location}, ${country}`;\n    }\n    return processedLocation;\n  }\n}\n\n    \n\n    \n        {{location}}\n\n{{date}}\n\n    \n        \n    \n    {{weather.temp}}°C\n    \n        Oops, something went\n            wrong!\n        (Perhaps you misspelled your location?)\n    \n    {{weather.desc | titlecase}}\n\n\n    \n    \n\n\n\n    \n        \n            {{weather.windSpeed}} km/h {{directionTxt}}\n        \n        \n            {{weather.humidity}}%\n        \n        \n            {{weather.pressure}}hpa\n        \n    \n\n\n\n    \n    \n        \n        \n    \n    \n\n    \n\n    \n                \n                    ./weather.component.sass\n                \n                \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{location}}{{date}}                    {{weather.temp}}°C            Oops, something went            wrong!        (Perhaps you misspelled your location?)        {{weather.desc | titlecase}}                                {{weather.windSpeed}} km/h {{directionTxt}}                            {{weather.humidity}}%                            {{weather.pressure}}hpa                                            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'WeatherComponent', 'selector': 'app-weather'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WeatherComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/models/weather.model.ts\n            \n            class\n            Weather\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/services/theme.service.ts\n            \n            injectable\n            ThemeService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/services/weather-api.service.ts\n            \n            injectable\n            WeatherApiService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/weather/weather.component.ts\n            \n            component\n            WeatherComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~12.2.0\n        \n            @angular/cdk : ^12.2.3\n        \n            @angular/common : ~12.2.0\n        \n            @angular/compiler : ~12.2.0\n        \n            @angular/core : ~12.2.0\n        \n            @angular/forms : ~12.2.0\n        \n            @angular/platform-browser : ~12.2.0\n        \n            @angular/platform-browser-dynamic : ~12.2.0\n        \n            rxjs : ~6.6.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.11.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nWeatherapp\nThis project was generated with Angular CLI version 12.2.0.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nWeatherComponent\n\nWeatherComponent\n\nAppModule -->\n\nWeatherComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        context\n                        \n                    \n                \n            \n                \n                    \n                        Default value : require.context('./', true, /\\.spec\\.ts$/)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        require\n                        \n                    \n                \n            \n                \n                    \n                        Type :     literal type\n\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.prod.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: true\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  production: false\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
